//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "CirculatorSignature", "Circulator", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.Circulator), "Signature", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.Signature), true)]
[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "CirculatorNotaryPage", "Circulator", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.Circulator), "NotaryPage", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.NotaryPage), true)]
[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "CountyCodePetitionMaster", "CountyCode", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.CountyCode), "PetitionMaster", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.PetitionMaster), true)]
[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "PetitionTypePetitionMaster", "PetitionType", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.PetitionType), "PetitionMaster", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.PetitionMaster), true)]
[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "PetitionMasterDataLinkCriteria", "PetitionMaster", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.PetitionMaster), "DataLinkCriteria", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.DataLinkCriteria), true)]
[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "DataLinkCriteriaPetitionLine", "DataLinkCriteria", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.DataLinkCriteria), "PetitionLine", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.PetitionLine), true)]
[assembly: EdmRelationshipAttribute("Mobile_PetitionsModel", "NotaryPagePetitionLine", "NotaryPage", RelationshipMultiplicity.One, typeof(Mobile_Petitions.DAL.NotaryPage), "PetitionLine", RelationshipMultiplicity.Many, typeof(Mobile_Petitions.DAL.PetitionLine), true)]

#endregion

namespace Mobile_Petitions.DAL
{
    #region Contexts

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Mobile_PetitionsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Mobile_PetitionsEntities object using the connection string found in the 'Mobile_PetitionsEntities' section of the application configuration file.
        /// </summary>
        public Mobile_PetitionsEntities() : base("name=Mobile_PetitionsEntities", "Mobile_PetitionsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Mobile_PetitionsEntities object.
        /// </summary>
        public Mobile_PetitionsEntities(string connectionString) : base(connectionString, "Mobile_PetitionsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Mobile_PetitionsEntities object.
        /// </summary>
        public Mobile_PetitionsEntities(EntityConnection connection) : base(connection, "Mobile_PetitionsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Signature> Signatures
        {
            get
            {
                if ((_Signatures == null))
                {
                    _Signatures = base.CreateObjectSet<Signature>("Signatures");
                }
                return _Signatures;
            }
        }
        private ObjectSet<Signature> _Signatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RememberUser> RememberUsers
        {
            get
            {
                if ((_RememberUsers == null))
                {
                    _RememberUsers = base.CreateObjectSet<RememberUser>("RememberUsers");
                }
                return _RememberUsers;
            }
        }
        private ObjectSet<RememberUser> _RememberUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Circulator> Circulators
        {
            get
            {
                if ((_Circulators == null))
                {
                    _Circulators = base.CreateObjectSet<Circulator>("Circulators");
                }
                return _Circulators;
            }
        }
        private ObjectSet<Circulator> _Circulators;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PetitionMaster> PetitionMasters
        {
            get
            {
                if ((_PetitionMasters == null))
                {
                    _PetitionMasters = base.CreateObjectSet<PetitionMaster>("PetitionMasters");
                }
                return _PetitionMasters;
            }
        }
        private ObjectSet<PetitionMaster> _PetitionMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PetitionType> PetitionTypes
        {
            get
            {
                if ((_PetitionTypes == null))
                {
                    _PetitionTypes = base.CreateObjectSet<PetitionType>("PetitionTypes");
                }
                return _PetitionTypes;
            }
        }
        private ObjectSet<PetitionType> _PetitionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotaryPage> NotaryPages
        {
            get
            {
                if ((_NotaryPages == null))
                {
                    _NotaryPages = base.CreateObjectSet<NotaryPage>("NotaryPages");
                }
                return _NotaryPages;
            }
        }
        private ObjectSet<NotaryPage> _NotaryPages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VRImport> VRImports
        {
            get
            {
                if ((_VRImports == null))
                {
                    _VRImports = base.CreateObjectSet<VRImport>("VRImports");
                }
                return _VRImports;
            }
        }
        private ObjectSet<VRImport> _VRImports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountyCode> CountyCodes
        {
            get
            {
                if ((_CountyCodes == null))
                {
                    _CountyCodes = base.CreateObjectSet<CountyCode>("CountyCodes");
                }
                return _CountyCodes;
            }
        }
        private ObjectSet<CountyCode> _CountyCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataLinkCriteria> DataLinkCriterias
        {
            get
            {
                if ((_DataLinkCriterias == null))
                {
                    _DataLinkCriterias = base.CreateObjectSet<DataLinkCriteria>("DataLinkCriterias");
                }
                return _DataLinkCriterias;
            }
        }
        private ObjectSet<DataLinkCriteria> _DataLinkCriterias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PetitionLine> PetitionLines
        {
            get
            {
                if ((_PetitionLines == null))
                {
                    _PetitionLines = base.CreateObjectSet<PetitionLine>("PetitionLines");
                }
                return _PetitionLines;
            }
        }
        private ObjectSet<PetitionLine> _PetitionLines;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Signatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSignatures(Signature signature)
        {
            base.AddObject("Signatures", signature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RememberUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRememberUsers(RememberUser rememberUser)
        {
            base.AddObject("RememberUsers", rememberUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Circulators EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCirculators(Circulator circulator)
        {
            base.AddObject("Circulators", circulator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PetitionMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPetitionMasters(PetitionMaster petitionMaster)
        {
            base.AddObject("PetitionMasters", petitionMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PetitionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPetitionTypes(PetitionType petitionType)
        {
            base.AddObject("PetitionTypes", petitionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotaryPages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotaryPages(NotaryPage notaryPage)
        {
            base.AddObject("NotaryPages", notaryPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VRImports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVRImports(VRImport vRImport)
        {
            base.AddObject("VRImports", vRImport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountyCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountyCodes(CountyCode countyCode)
        {
            base.AddObject("CountyCodes", countyCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataLinkCriterias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataLinkCriterias(DataLinkCriteria dataLinkCriteria)
        {
            base.AddObject("DataLinkCriterias", dataLinkCriteria);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PetitionLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPetitionLines(PetitionLine petitionLine)
        {
            base.AddObject("PetitionLines", petitionLine);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="Circulator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Circulator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Circulator object.
        /// </summary>
        /// <param name="circulatorID">Initial value of the CirculatorID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="county">Initial value of the County property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="admin">Initial value of the Admin property.</param>
        /// <param name="circSigClip">Initial value of the CircSigClip property.</param>
        public static Circulator CreateCirculator(global::System.Int32 circulatorID, global::System.String firstName, global::System.String lastName, global::System.String address, global::System.String city, global::System.String county, global::System.String state, global::System.String zipCode, global::System.String userName, global::System.String password, global::System.String email, global::System.Boolean admin, global::System.String circSigClip)
        {
            Circulator circulator = new Circulator();
            circulator.CirculatorID = circulatorID;
            circulator.FirstName = firstName;
            circulator.LastName = lastName;
            circulator.Address = address;
            circulator.City = city;
            circulator.County = county;
            circulator.State = state;
            circulator.ZipCode = zipCode;
            circulator.UserName = userName;
            circulator.Password = password;
            circulator.Email = email;
            circulator.Admin = admin;
            circulator.CircSigClip = circSigClip;
            return circulator;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CirculatorID
        {
            get
            {
                return _CirculatorID;
            }
            set
            {
                if (_CirculatorID != value)
                {
                    OnCirculatorIDChanging(value);
                    ReportPropertyChanging("CirculatorID");
                    _CirculatorID = StructuralObject.SetValidValue(value, "CirculatorID");
                    ReportPropertyChanged("CirculatorID");
                    OnCirculatorIDChanged();
                }
            }
        }
        private global::System.Int32 _CirculatorID;
        partial void OnCirculatorIDChanging(global::System.Int32 value);
        partial void OnCirculatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, false, "County");
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Admin
        {
            get
            {
                return _Admin;
            }
            set
            {
                OnAdminChanging(value);
                ReportPropertyChanging("Admin");
                _Admin = StructuralObject.SetValidValue(value, "Admin");
                ReportPropertyChanged("Admin");
                OnAdminChanged();
            }
        }
        private global::System.Boolean _Admin;
        partial void OnAdminChanging(global::System.Boolean value);
        partial void OnAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CircSigClip
        {
            get
            {
                return _CircSigClip;
            }
            set
            {
                OnCircSigClipChanging(value);
                ReportPropertyChanging("CircSigClip");
                _CircSigClip = StructuralObject.SetValidValue(value, false, "CircSigClip");
                ReportPropertyChanged("CircSigClip");
                OnCircSigClipChanged();
            }
        }
        private global::System.String _CircSigClip;
        partial void OnCircSigClipChanging(global::System.String value);
        partial void OnCircSigClipChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "CirculatorSignature", "Signature")]
        public EntityCollection<Signature> Signatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Signature>("Mobile_PetitionsModel.CirculatorSignature", "Signature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Signature>("Mobile_PetitionsModel.CirculatorSignature", "Signature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "CirculatorNotaryPage", "NotaryPage")]
        public EntityCollection<NotaryPage> NotaryPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotaryPage>("Mobile_PetitionsModel.CirculatorNotaryPage", "NotaryPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotaryPage>("Mobile_PetitionsModel.CirculatorNotaryPage", "NotaryPage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="CountyCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountyCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountyCode object.
        /// </summary>
        /// <param name="jurisdictionID">Initial value of the JurisdictionID property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="county_Code">Initial value of the County_Code property.</param>
        /// <param name="county">Initial value of the County property.</param>
        public static CountyCode CreateCountyCode(global::System.Int32 jurisdictionID, global::System.String state, global::System.String county_Code, global::System.String county)
        {
            CountyCode countyCode = new CountyCode();
            countyCode.JurisdictionID = jurisdictionID;
            countyCode.State = state;
            countyCode.County_Code = county_Code;
            countyCode.County = county;
            return countyCode;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JurisdictionID
        {
            get
            {
                return _JurisdictionID;
            }
            set
            {
                if (_JurisdictionID != value)
                {
                    OnJurisdictionIDChanging(value);
                    ReportPropertyChanging("JurisdictionID");
                    _JurisdictionID = StructuralObject.SetValidValue(value, "JurisdictionID");
                    ReportPropertyChanged("JurisdictionID");
                    OnJurisdictionIDChanged();
                }
            }
        }
        private global::System.Int32 _JurisdictionID;
        partial void OnJurisdictionIDChanging(global::System.Int32 value);
        partial void OnJurisdictionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String County_Code
        {
            get
            {
                return _County_Code;
            }
            set
            {
                OnCounty_CodeChanging(value);
                ReportPropertyChanging("County_Code");
                _County_Code = StructuralObject.SetValidValue(value, false, "County_Code");
                ReportPropertyChanged("County_Code");
                OnCounty_CodeChanged();
            }
        }
        private global::System.String _County_Code;
        partial void OnCounty_CodeChanging(global::System.String value);
        partial void OnCounty_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, false, "County");
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "CountyCodePetitionMaster", "PetitionMaster")]
        public EntityCollection<PetitionMaster> PetitionMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PetitionMaster>("Mobile_PetitionsModel.CountyCodePetitionMaster", "PetitionMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PetitionMaster>("Mobile_PetitionsModel.CountyCodePetitionMaster", "PetitionMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="DataLinkCriteria")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataLinkCriteria : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataLinkCriteria object.
        /// </summary>
        /// <param name="dataLinkID">Initial value of the DataLinkID property.</param>
        /// <param name="petitionID">Initial value of the PetitionID property.</param>
        /// <param name="dataLinkCode">Initial value of the DataLinkCode property.</param>
        /// <param name="codeDescription">Initial value of the CodeDescription property.</param>
        /// <param name="orderBy">Initial value of the OrderBy property.</param>
        /// <param name="useBirthday">Initial value of the UseBirthday property.</param>
        public static DataLinkCriteria CreateDataLinkCriteria(global::System.Int32 dataLinkID, global::System.Int32 petitionID, global::System.String dataLinkCode, global::System.String codeDescription, global::System.Double orderBy, global::System.Boolean useBirthday)
        {
            DataLinkCriteria dataLinkCriteria = new DataLinkCriteria();
            dataLinkCriteria.DataLinkID = dataLinkID;
            dataLinkCriteria.PetitionID = petitionID;
            dataLinkCriteria.DataLinkCode = dataLinkCode;
            dataLinkCriteria.CodeDescription = codeDescription;
            dataLinkCriteria.OrderBy = orderBy;
            dataLinkCriteria.UseBirthday = useBirthday;
            return dataLinkCriteria;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataLinkID
        {
            get
            {
                return _DataLinkID;
            }
            set
            {
                if (_DataLinkID != value)
                {
                    OnDataLinkIDChanging(value);
                    ReportPropertyChanging("DataLinkID");
                    _DataLinkID = StructuralObject.SetValidValue(value, "DataLinkID");
                    ReportPropertyChanged("DataLinkID");
                    OnDataLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _DataLinkID;
        partial void OnDataLinkIDChanging(global::System.Int32 value);
        partial void OnDataLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PetitionID
        {
            get
            {
                return _PetitionID;
            }
            set
            {
                OnPetitionIDChanging(value);
                ReportPropertyChanging("PetitionID");
                _PetitionID = StructuralObject.SetValidValue(value, "PetitionID");
                ReportPropertyChanged("PetitionID");
                OnPetitionIDChanged();
            }
        }
        private global::System.Int32 _PetitionID;
        partial void OnPetitionIDChanging(global::System.Int32 value);
        partial void OnPetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DataLinkCode
        {
            get
            {
                return _DataLinkCode;
            }
            set
            {
                OnDataLinkCodeChanging(value);
                ReportPropertyChanging("DataLinkCode");
                _DataLinkCode = StructuralObject.SetValidValue(value, false, "DataLinkCode");
                ReportPropertyChanged("DataLinkCode");
                OnDataLinkCodeChanged();
            }
        }
        private global::System.String _DataLinkCode;
        partial void OnDataLinkCodeChanging(global::System.String value);
        partial void OnDataLinkCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CodeDescription
        {
            get
            {
                return _CodeDescription;
            }
            set
            {
                OnCodeDescriptionChanging(value);
                ReportPropertyChanging("CodeDescription");
                _CodeDescription = StructuralObject.SetValidValue(value, false, "CodeDescription");
                ReportPropertyChanged("CodeDescription");
                OnCodeDescriptionChanged();
            }
        }
        private global::System.String _CodeDescription;
        partial void OnCodeDescriptionChanging(global::System.String value);
        partial void OnCodeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OrderBy
        {
            get
            {
                return _OrderBy;
            }
            set
            {
                OnOrderByChanging(value);
                ReportPropertyChanging("OrderBy");
                _OrderBy = StructuralObject.SetValidValue(value, "OrderBy");
                ReportPropertyChanged("OrderBy");
                OnOrderByChanged();
            }
        }
        private global::System.Double _OrderBy;
        partial void OnOrderByChanging(global::System.Double value);
        partial void OnOrderByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseBirthday
        {
            get
            {
                return _UseBirthday;
            }
            set
            {
                OnUseBirthdayChanging(value);
                ReportPropertyChanging("UseBirthday");
                _UseBirthday = StructuralObject.SetValidValue(value, "UseBirthday");
                ReportPropertyChanged("UseBirthday");
                OnUseBirthdayChanged();
            }
        }
        private global::System.Boolean _UseBirthday;
        partial void OnUseBirthdayChanging(global::System.Boolean value);
        partial void OnUseBirthdayChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "PetitionMasterDataLinkCriteria", "PetitionMaster")]
        public PetitionMaster PetitionMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PetitionMaster>("Mobile_PetitionsModel.PetitionMasterDataLinkCriteria", "PetitionMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PetitionMaster>("Mobile_PetitionsModel.PetitionMasterDataLinkCriteria", "PetitionMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PetitionMaster> PetitionMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PetitionMaster>("Mobile_PetitionsModel.PetitionMasterDataLinkCriteria", "PetitionMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PetitionMaster>("Mobile_PetitionsModel.PetitionMasterDataLinkCriteria", "PetitionMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "DataLinkCriteriaPetitionLine", "PetitionLine")]
        public EntityCollection<PetitionLine> PetitionLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PetitionLine>("Mobile_PetitionsModel.DataLinkCriteriaPetitionLine", "PetitionLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PetitionLine>("Mobile_PetitionsModel.DataLinkCriteriaPetitionLine", "PetitionLine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="NotaryPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotaryPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotaryPage object.
        /// </summary>
        /// <param name="pageID">Initial value of the PageID property.</param>
        /// <param name="pageKey">Initial value of the PageKey property.</param>
        /// <param name="packetKey">Initial value of the PacketKey property.</param>
        /// <param name="pageNum">Initial value of the PageNum property.</param>
        /// <param name="scanDate">Initial value of the ScanDate property.</param>
        /// <param name="circulatorID">Initial value of the CirculatorID property.</param>
        /// <param name="circultorNotaryCounty">Initial value of the CircultorNotaryCounty property.</param>
        /// <param name="circulatorNotaryName">Initial value of the CirculatorNotaryName property.</param>
        /// <param name="circulatorCounty">Initial value of the CirculatorCounty property.</param>
        /// <param name="circulatorName">Initial value of the CirculatorName property.</param>
        /// <param name="circulatorAddress">Initial value of the CirculatorAddress property.</param>
        /// <param name="circulatorCity">Initial value of the CirculatorCity property.</param>
        /// <param name="circulatorState">Initial value of the CirculatorState property.</param>
        /// <param name="circulatorZipCode">Initial value of the CirculatorZipCode property.</param>
        /// <param name="circulatorDateSigned">Initial value of the CirculatorDateSigned property.</param>
        /// <param name="serialNumberBackError">Initial value of the SerialNumberBackError property.</param>
        /// <param name="circulatorDataError">Initial value of the CirculatorDataError property.</param>
        /// <param name="notaryDataError">Initial value of the NotaryDataError property.</param>
        /// <param name="notaryExpiredError">Initial value of the NotaryExpiredError property.</param>
        /// <param name="earlyNotarizationError">Initial value of the EarlyNotarizationError property.</param>
        /// <param name="circulatorNotRegisteredError">Initial value of the CirculatorNotRegisteredError property.</param>
        /// <param name="serialNumberBackParaError">Initial value of the SerialNumberBackParaError property.</param>
        /// <param name="circulatorDataParaError">Initial value of the CirculatorDataParaError property.</param>
        /// <param name="notaryDataParaError">Initial value of the NotaryDataParaError property.</param>
        /// <param name="notaryExpiredParaError">Initial value of the NotaryExpiredParaError property.</param>
        /// <param name="earlyNotarizationParaError">Initial value of the EarlyNotarizationParaError property.</param>
        /// <param name="circulatorNotRegisteredParaError">Initial value of the CirculatorNotRegisteredParaError property.</param>
        /// <param name="rotatePage">Initial value of the RotatePage property.</param>
        public static NotaryPage CreateNotaryPage(global::System.Int32 pageID, global::System.Int32 pageKey, global::System.String packetKey, global::System.String pageNum, global::System.DateTime scanDate, global::System.Int32 circulatorID, global::System.String circultorNotaryCounty, global::System.String circulatorNotaryName, global::System.String circulatorCounty, global::System.String circulatorName, global::System.String circulatorAddress, global::System.String circulatorCity, global::System.String circulatorState, global::System.String circulatorZipCode, global::System.String circulatorDateSigned, global::System.String serialNumberBackError, global::System.String circulatorDataError, global::System.String notaryDataError, global::System.String notaryExpiredError, global::System.String earlyNotarizationError, global::System.String circulatorNotRegisteredError, global::System.String serialNumberBackParaError, global::System.String circulatorDataParaError, global::System.String notaryDataParaError, global::System.String notaryExpiredParaError, global::System.String earlyNotarizationParaError, global::System.String circulatorNotRegisteredParaError, global::System.String rotatePage)
        {
            NotaryPage notaryPage = new NotaryPage();
            notaryPage.PageID = pageID;
            notaryPage.PageKey = pageKey;
            notaryPage.PacketKey = packetKey;
            notaryPage.PageNum = pageNum;
            notaryPage.ScanDate = scanDate;
            notaryPage.CirculatorID = circulatorID;
            notaryPage.CircultorNotaryCounty = circultorNotaryCounty;
            notaryPage.CirculatorNotaryName = circulatorNotaryName;
            notaryPage.CirculatorCounty = circulatorCounty;
            notaryPage.CirculatorName = circulatorName;
            notaryPage.CirculatorAddress = circulatorAddress;
            notaryPage.CirculatorCity = circulatorCity;
            notaryPage.CirculatorState = circulatorState;
            notaryPage.CirculatorZipCode = circulatorZipCode;
            notaryPage.CirculatorDateSigned = circulatorDateSigned;
            notaryPage.SerialNumberBackError = serialNumberBackError;
            notaryPage.CirculatorDataError = circulatorDataError;
            notaryPage.NotaryDataError = notaryDataError;
            notaryPage.NotaryExpiredError = notaryExpiredError;
            notaryPage.EarlyNotarizationError = earlyNotarizationError;
            notaryPage.CirculatorNotRegisteredError = circulatorNotRegisteredError;
            notaryPage.SerialNumberBackParaError = serialNumberBackParaError;
            notaryPage.CirculatorDataParaError = circulatorDataParaError;
            notaryPage.NotaryDataParaError = notaryDataParaError;
            notaryPage.NotaryExpiredParaError = notaryExpiredParaError;
            notaryPage.EarlyNotarizationParaError = earlyNotarizationParaError;
            notaryPage.CirculatorNotRegisteredParaError = circulatorNotRegisteredParaError;
            notaryPage.RotatePage = rotatePage;
            return notaryPage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageID
        {
            get
            {
                return _PageID;
            }
            set
            {
                if (_PageID != value)
                {
                    OnPageIDChanging(value);
                    ReportPropertyChanging("PageID");
                    _PageID = StructuralObject.SetValidValue(value, "PageID");
                    ReportPropertyChanged("PageID");
                    OnPageIDChanged();
                }
            }
        }
        private global::System.Int32 _PageID;
        partial void OnPageIDChanging(global::System.Int32 value);
        partial void OnPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageKey
        {
            get
            {
                return _PageKey;
            }
            set
            {
                OnPageKeyChanging(value);
                ReportPropertyChanging("PageKey");
                _PageKey = StructuralObject.SetValidValue(value, "PageKey");
                ReportPropertyChanged("PageKey");
                OnPageKeyChanged();
            }
        }
        private global::System.Int32 _PageKey;
        partial void OnPageKeyChanging(global::System.Int32 value);
        partial void OnPageKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PacketKey
        {
            get
            {
                return _PacketKey;
            }
            set
            {
                OnPacketKeyChanging(value);
                ReportPropertyChanging("PacketKey");
                _PacketKey = StructuralObject.SetValidValue(value, false, "PacketKey");
                ReportPropertyChanged("PacketKey");
                OnPacketKeyChanged();
            }
        }
        private global::System.String _PacketKey;
        partial void OnPacketKeyChanging(global::System.String value);
        partial void OnPacketKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PageNum
        {
            get
            {
                return _PageNum;
            }
            set
            {
                OnPageNumChanging(value);
                ReportPropertyChanging("PageNum");
                _PageNum = StructuralObject.SetValidValue(value, false, "PageNum");
                ReportPropertyChanged("PageNum");
                OnPageNumChanged();
            }
        }
        private global::System.String _PageNum;
        partial void OnPageNumChanging(global::System.String value);
        partial void OnPageNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScanDate
        {
            get
            {
                return _ScanDate;
            }
            set
            {
                OnScanDateChanging(value);
                ReportPropertyChanging("ScanDate");
                _ScanDate = StructuralObject.SetValidValue(value, "ScanDate");
                ReportPropertyChanged("ScanDate");
                OnScanDateChanged();
            }
        }
        private global::System.DateTime _ScanDate;
        partial void OnScanDateChanging(global::System.DateTime value);
        partial void OnScanDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CirculatorID
        {
            get
            {
                return _CirculatorID;
            }
            set
            {
                OnCirculatorIDChanging(value);
                ReportPropertyChanging("CirculatorID");
                _CirculatorID = StructuralObject.SetValidValue(value, "CirculatorID");
                ReportPropertyChanged("CirculatorID");
                OnCirculatorIDChanged();
            }
        }
        private global::System.Int32 _CirculatorID;
        partial void OnCirculatorIDChanging(global::System.Int32 value);
        partial void OnCirculatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CircultorNotaryCounty
        {
            get
            {
                return _CircultorNotaryCounty;
            }
            set
            {
                OnCircultorNotaryCountyChanging(value);
                ReportPropertyChanging("CircultorNotaryCounty");
                _CircultorNotaryCounty = StructuralObject.SetValidValue(value, false, "CircultorNotaryCounty");
                ReportPropertyChanged("CircultorNotaryCounty");
                OnCircultorNotaryCountyChanged();
            }
        }
        private global::System.String _CircultorNotaryCounty;
        partial void OnCircultorNotaryCountyChanging(global::System.String value);
        partial void OnCircultorNotaryCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorNotaryName
        {
            get
            {
                return _CirculatorNotaryName;
            }
            set
            {
                OnCirculatorNotaryNameChanging(value);
                ReportPropertyChanging("CirculatorNotaryName");
                _CirculatorNotaryName = StructuralObject.SetValidValue(value, false, "CirculatorNotaryName");
                ReportPropertyChanged("CirculatorNotaryName");
                OnCirculatorNotaryNameChanged();
            }
        }
        private global::System.String _CirculatorNotaryName;
        partial void OnCirculatorNotaryNameChanging(global::System.String value);
        partial void OnCirculatorNotaryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorCounty
        {
            get
            {
                return _CirculatorCounty;
            }
            set
            {
                OnCirculatorCountyChanging(value);
                ReportPropertyChanging("CirculatorCounty");
                _CirculatorCounty = StructuralObject.SetValidValue(value, false, "CirculatorCounty");
                ReportPropertyChanged("CirculatorCounty");
                OnCirculatorCountyChanged();
            }
        }
        private global::System.String _CirculatorCounty;
        partial void OnCirculatorCountyChanging(global::System.String value);
        partial void OnCirculatorCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorName
        {
            get
            {
                return _CirculatorName;
            }
            set
            {
                OnCirculatorNameChanging(value);
                ReportPropertyChanging("CirculatorName");
                _CirculatorName = StructuralObject.SetValidValue(value, false, "CirculatorName");
                ReportPropertyChanged("CirculatorName");
                OnCirculatorNameChanged();
            }
        }
        private global::System.String _CirculatorName;
        partial void OnCirculatorNameChanging(global::System.String value);
        partial void OnCirculatorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorAddress
        {
            get
            {
                return _CirculatorAddress;
            }
            set
            {
                OnCirculatorAddressChanging(value);
                ReportPropertyChanging("CirculatorAddress");
                _CirculatorAddress = StructuralObject.SetValidValue(value, false, "CirculatorAddress");
                ReportPropertyChanged("CirculatorAddress");
                OnCirculatorAddressChanged();
            }
        }
        private global::System.String _CirculatorAddress;
        partial void OnCirculatorAddressChanging(global::System.String value);
        partial void OnCirculatorAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorCity
        {
            get
            {
                return _CirculatorCity;
            }
            set
            {
                OnCirculatorCityChanging(value);
                ReportPropertyChanging("CirculatorCity");
                _CirculatorCity = StructuralObject.SetValidValue(value, false, "CirculatorCity");
                ReportPropertyChanged("CirculatorCity");
                OnCirculatorCityChanged();
            }
        }
        private global::System.String _CirculatorCity;
        partial void OnCirculatorCityChanging(global::System.String value);
        partial void OnCirculatorCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorState
        {
            get
            {
                return _CirculatorState;
            }
            set
            {
                OnCirculatorStateChanging(value);
                ReportPropertyChanging("CirculatorState");
                _CirculatorState = StructuralObject.SetValidValue(value, false, "CirculatorState");
                ReportPropertyChanged("CirculatorState");
                OnCirculatorStateChanged();
            }
        }
        private global::System.String _CirculatorState;
        partial void OnCirculatorStateChanging(global::System.String value);
        partial void OnCirculatorStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorZipCode
        {
            get
            {
                return _CirculatorZipCode;
            }
            set
            {
                OnCirculatorZipCodeChanging(value);
                ReportPropertyChanging("CirculatorZipCode");
                _CirculatorZipCode = StructuralObject.SetValidValue(value, false, "CirculatorZipCode");
                ReportPropertyChanged("CirculatorZipCode");
                OnCirculatorZipCodeChanged();
            }
        }
        private global::System.String _CirculatorZipCode;
        partial void OnCirculatorZipCodeChanging(global::System.String value);
        partial void OnCirculatorZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorDateSigned
        {
            get
            {
                return _CirculatorDateSigned;
            }
            set
            {
                OnCirculatorDateSignedChanging(value);
                ReportPropertyChanging("CirculatorDateSigned");
                _CirculatorDateSigned = StructuralObject.SetValidValue(value, false, "CirculatorDateSigned");
                ReportPropertyChanged("CirculatorDateSigned");
                OnCirculatorDateSignedChanged();
            }
        }
        private global::System.String _CirculatorDateSigned;
        partial void OnCirculatorDateSignedChanging(global::System.String value);
        partial void OnCirculatorDateSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNumberBackError
        {
            get
            {
                return _SerialNumberBackError;
            }
            set
            {
                OnSerialNumberBackErrorChanging(value);
                ReportPropertyChanging("SerialNumberBackError");
                _SerialNumberBackError = StructuralObject.SetValidValue(value, false, "SerialNumberBackError");
                ReportPropertyChanged("SerialNumberBackError");
                OnSerialNumberBackErrorChanged();
            }
        }
        private global::System.String _SerialNumberBackError;
        partial void OnSerialNumberBackErrorChanging(global::System.String value);
        partial void OnSerialNumberBackErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorDataError
        {
            get
            {
                return _CirculatorDataError;
            }
            set
            {
                OnCirculatorDataErrorChanging(value);
                ReportPropertyChanging("CirculatorDataError");
                _CirculatorDataError = StructuralObject.SetValidValue(value, false, "CirculatorDataError");
                ReportPropertyChanged("CirculatorDataError");
                OnCirculatorDataErrorChanged();
            }
        }
        private global::System.String _CirculatorDataError;
        partial void OnCirculatorDataErrorChanging(global::System.String value);
        partial void OnCirculatorDataErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotaryDataError
        {
            get
            {
                return _NotaryDataError;
            }
            set
            {
                OnNotaryDataErrorChanging(value);
                ReportPropertyChanging("NotaryDataError");
                _NotaryDataError = StructuralObject.SetValidValue(value, false, "NotaryDataError");
                ReportPropertyChanged("NotaryDataError");
                OnNotaryDataErrorChanged();
            }
        }
        private global::System.String _NotaryDataError;
        partial void OnNotaryDataErrorChanging(global::System.String value);
        partial void OnNotaryDataErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotaryExpiredError
        {
            get
            {
                return _NotaryExpiredError;
            }
            set
            {
                OnNotaryExpiredErrorChanging(value);
                ReportPropertyChanging("NotaryExpiredError");
                _NotaryExpiredError = StructuralObject.SetValidValue(value, false, "NotaryExpiredError");
                ReportPropertyChanged("NotaryExpiredError");
                OnNotaryExpiredErrorChanged();
            }
        }
        private global::System.String _NotaryExpiredError;
        partial void OnNotaryExpiredErrorChanging(global::System.String value);
        partial void OnNotaryExpiredErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EarlyNotarizationError
        {
            get
            {
                return _EarlyNotarizationError;
            }
            set
            {
                OnEarlyNotarizationErrorChanging(value);
                ReportPropertyChanging("EarlyNotarizationError");
                _EarlyNotarizationError = StructuralObject.SetValidValue(value, false, "EarlyNotarizationError");
                ReportPropertyChanged("EarlyNotarizationError");
                OnEarlyNotarizationErrorChanged();
            }
        }
        private global::System.String _EarlyNotarizationError;
        partial void OnEarlyNotarizationErrorChanging(global::System.String value);
        partial void OnEarlyNotarizationErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorNotRegisteredError
        {
            get
            {
                return _CirculatorNotRegisteredError;
            }
            set
            {
                OnCirculatorNotRegisteredErrorChanging(value);
                ReportPropertyChanging("CirculatorNotRegisteredError");
                _CirculatorNotRegisteredError = StructuralObject.SetValidValue(value, false, "CirculatorNotRegisteredError");
                ReportPropertyChanged("CirculatorNotRegisteredError");
                OnCirculatorNotRegisteredErrorChanged();
            }
        }
        private global::System.String _CirculatorNotRegisteredError;
        partial void OnCirculatorNotRegisteredErrorChanging(global::System.String value);
        partial void OnCirculatorNotRegisteredErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNumberBackParaError
        {
            get
            {
                return _SerialNumberBackParaError;
            }
            set
            {
                OnSerialNumberBackParaErrorChanging(value);
                ReportPropertyChanging("SerialNumberBackParaError");
                _SerialNumberBackParaError = StructuralObject.SetValidValue(value, false, "SerialNumberBackParaError");
                ReportPropertyChanged("SerialNumberBackParaError");
                OnSerialNumberBackParaErrorChanged();
            }
        }
        private global::System.String _SerialNumberBackParaError;
        partial void OnSerialNumberBackParaErrorChanging(global::System.String value);
        partial void OnSerialNumberBackParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorDataParaError
        {
            get
            {
                return _CirculatorDataParaError;
            }
            set
            {
                OnCirculatorDataParaErrorChanging(value);
                ReportPropertyChanging("CirculatorDataParaError");
                _CirculatorDataParaError = StructuralObject.SetValidValue(value, false, "CirculatorDataParaError");
                ReportPropertyChanged("CirculatorDataParaError");
                OnCirculatorDataParaErrorChanged();
            }
        }
        private global::System.String _CirculatorDataParaError;
        partial void OnCirculatorDataParaErrorChanging(global::System.String value);
        partial void OnCirculatorDataParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotaryDataParaError
        {
            get
            {
                return _NotaryDataParaError;
            }
            set
            {
                OnNotaryDataParaErrorChanging(value);
                ReportPropertyChanging("NotaryDataParaError");
                _NotaryDataParaError = StructuralObject.SetValidValue(value, false, "NotaryDataParaError");
                ReportPropertyChanged("NotaryDataParaError");
                OnNotaryDataParaErrorChanged();
            }
        }
        private global::System.String _NotaryDataParaError;
        partial void OnNotaryDataParaErrorChanging(global::System.String value);
        partial void OnNotaryDataParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotaryExpiredParaError
        {
            get
            {
                return _NotaryExpiredParaError;
            }
            set
            {
                OnNotaryExpiredParaErrorChanging(value);
                ReportPropertyChanging("NotaryExpiredParaError");
                _NotaryExpiredParaError = StructuralObject.SetValidValue(value, false, "NotaryExpiredParaError");
                ReportPropertyChanged("NotaryExpiredParaError");
                OnNotaryExpiredParaErrorChanged();
            }
        }
        private global::System.String _NotaryExpiredParaError;
        partial void OnNotaryExpiredParaErrorChanging(global::System.String value);
        partial void OnNotaryExpiredParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EarlyNotarizationParaError
        {
            get
            {
                return _EarlyNotarizationParaError;
            }
            set
            {
                OnEarlyNotarizationParaErrorChanging(value);
                ReportPropertyChanging("EarlyNotarizationParaError");
                _EarlyNotarizationParaError = StructuralObject.SetValidValue(value, false, "EarlyNotarizationParaError");
                ReportPropertyChanged("EarlyNotarizationParaError");
                OnEarlyNotarizationParaErrorChanged();
            }
        }
        private global::System.String _EarlyNotarizationParaError;
        partial void OnEarlyNotarizationParaErrorChanging(global::System.String value);
        partial void OnEarlyNotarizationParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorNotRegisteredParaError
        {
            get
            {
                return _CirculatorNotRegisteredParaError;
            }
            set
            {
                OnCirculatorNotRegisteredParaErrorChanging(value);
                ReportPropertyChanging("CirculatorNotRegisteredParaError");
                _CirculatorNotRegisteredParaError = StructuralObject.SetValidValue(value, false, "CirculatorNotRegisteredParaError");
                ReportPropertyChanged("CirculatorNotRegisteredParaError");
                OnCirculatorNotRegisteredParaErrorChanged();
            }
        }
        private global::System.String _CirculatorNotRegisteredParaError;
        partial void OnCirculatorNotRegisteredParaErrorChanging(global::System.String value);
        partial void OnCirculatorNotRegisteredParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RotatePage
        {
            get
            {
                return _RotatePage;
            }
            set
            {
                OnRotatePageChanging(value);
                ReportPropertyChanging("RotatePage");
                _RotatePage = StructuralObject.SetValidValue(value, false, "RotatePage");
                ReportPropertyChanged("RotatePage");
                OnRotatePageChanged();
            }
        }
        private global::System.String _RotatePage;
        partial void OnRotatePageChanging(global::System.String value);
        partial void OnRotatePageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "CirculatorNotaryPage", "Circulator")]
        public Circulator Circulator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorNotaryPage", "Circulator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorNotaryPage", "Circulator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Circulator> CirculatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorNotaryPage", "Circulator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorNotaryPage", "Circulator", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "NotaryPagePetitionLine", "PetitionLine")]
        public EntityCollection<PetitionLine> PetitionLines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PetitionLine>("Mobile_PetitionsModel.NotaryPagePetitionLine", "PetitionLine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PetitionLine>("Mobile_PetitionsModel.NotaryPagePetitionLine", "PetitionLine", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="PetitionLine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PetitionLine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PetitionLine object.
        /// </summary>
        /// <param name="lineKey">Initial value of the LineKey property.</param>
        /// <param name="pageID">Initial value of the PageID property.</param>
        /// <param name="rowIndex">Initial value of the RowIndex property.</param>
        /// <param name="lineStatus">Initial value of the LineStatus property.</param>
        /// <param name="autoAccepted">Initial value of the AutoAccepted property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="streetAddress">Initial value of the StreetAddress property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="signedDate">Initial value of the SignedDate property.</param>
        /// <param name="voterID">Initial value of the VoterID property.</param>
        /// <param name="dataLinkID">Initial value of the DataLinkID property.</param>
        /// <param name="apt">Initial value of the Apt property.</param>
        /// <param name="voterRegNotFoundError">Initial value of the VoterRegNotFoundError property.</param>
        /// <param name="missingNameError">Initial value of the MissingNameError property.</param>
        /// <param name="missingAddressError">Initial value of the MissingAddressError property.</param>
        /// <param name="missingDateSignedError">Initial value of the MissingDateSignedError property.</param>
        /// <param name="addressMismatchError">Initial value of the AddressMismatchError property.</param>
        /// <param name="signatureMismatchError">Initial value of the SignatureMismatchError property.</param>
        /// <param name="invalidDateSignedError">Initial value of the InvalidDateSignedError property.</param>
        /// <param name="missingSignatureParaError">Initial value of the MissingSignatureParaError property.</param>
        /// <param name="missingNameParaError">Initial value of the MissingNameParaError property.</param>
        /// <param name="missingAddressParaError">Initial value of the MissingAddressParaError property.</param>
        /// <param name="missingDateSignedParaError">Initial value of the MissingDateSignedParaError property.</param>
        /// <param name="suffix">Initial value of the Suffix property.</param>
        /// <param name="driverLicenseNumber">Initial value of the DriverLicenseNumber property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        /// <param name="withdrawnVoterError">Initial value of the WithdrawnVoterError property.</param>
        public static PetitionLine CreatePetitionLine(global::System.Int32 lineKey, global::System.Int32 pageID, global::System.Int32 rowIndex, global::System.String lineStatus, global::System.String autoAccepted, global::System.String fullName, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String streetAddress, global::System.String city, global::System.String state, global::System.String zipCode, global::System.DateTime signedDate, global::System.String voterID, global::System.Int32 dataLinkID, global::System.String apt, global::System.String voterRegNotFoundError, global::System.String missingNameError, global::System.String missingAddressError, global::System.String missingDateSignedError, global::System.String addressMismatchError, global::System.String signatureMismatchError, global::System.String invalidDateSignedError, global::System.String missingSignatureParaError, global::System.String missingNameParaError, global::System.String missingAddressParaError, global::System.String missingDateSignedParaError, global::System.String suffix, global::System.String driverLicenseNumber, global::System.DateTime birthDate, global::System.String withdrawnVoterError)
        {
            PetitionLine petitionLine = new PetitionLine();
            petitionLine.LineKey = lineKey;
            petitionLine.PageID = pageID;
            petitionLine.RowIndex = rowIndex;
            petitionLine.LineStatus = lineStatus;
            petitionLine.AutoAccepted = autoAccepted;
            petitionLine.FullName = fullName;
            petitionLine.FirstName = firstName;
            petitionLine.MiddleName = middleName;
            petitionLine.LastName = lastName;
            petitionLine.StreetAddress = streetAddress;
            petitionLine.City = city;
            petitionLine.State = state;
            petitionLine.ZipCode = zipCode;
            petitionLine.SignedDate = signedDate;
            petitionLine.VoterID = voterID;
            petitionLine.DataLinkID = dataLinkID;
            petitionLine.Apt = apt;
            petitionLine.VoterRegNotFoundError = voterRegNotFoundError;
            petitionLine.MissingNameError = missingNameError;
            petitionLine.MissingAddressError = missingAddressError;
            petitionLine.MissingDateSignedError = missingDateSignedError;
            petitionLine.AddressMismatchError = addressMismatchError;
            petitionLine.SignatureMismatchError = signatureMismatchError;
            petitionLine.InvalidDateSignedError = invalidDateSignedError;
            petitionLine.MissingSignatureParaError = missingSignatureParaError;
            petitionLine.MissingNameParaError = missingNameParaError;
            petitionLine.MissingAddressParaError = missingAddressParaError;
            petitionLine.MissingDateSignedParaError = missingDateSignedParaError;
            petitionLine.Suffix = suffix;
            petitionLine.DriverLicenseNumber = driverLicenseNumber;
            petitionLine.BirthDate = birthDate;
            petitionLine.WithdrawnVoterError = withdrawnVoterError;
            return petitionLine;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Continuous record counter that is unique to a petition.
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LineKey
        {
            get
            {
                return _LineKey;
            }
            set
            {
                if (_LineKey != value)
                {
                    OnLineKeyChanging(value);
                    ReportPropertyChanging("LineKey");
                    _LineKey = StructuralObject.SetValidValue(value, "LineKey");
                    ReportPropertyChanged("LineKey");
                    OnLineKeyChanged();
                }
            }
        }
        private global::System.Int32 _LineKey;
        partial void OnLineKeyChanging(global::System.Int32 value);
        partial void OnLineKeyChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Unique counter for each login session
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageID
        {
            get
            {
                return _PageID;
            }
            set
            {
                OnPageIDChanging(value);
                ReportPropertyChanging("PageID");
                _PageID = StructuralObject.SetValidValue(value, "PageID");
                ReportPropertyChanged("PageID");
                OnPageIDChanged();
            }
        }
        private global::System.Int32 _PageID;
        partial void OnPageIDChanging(global::System.Int32 value);
        partial void OnPageIDChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Unique record counter for each session
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RowIndex
        {
            get
            {
                return _RowIndex;
            }
            set
            {
                OnRowIndexChanging(value);
                ReportPropertyChanging("RowIndex");
                _RowIndex = StructuralObject.SetValidValue(value, "RowIndex");
                ReportPropertyChanged("RowIndex");
                OnRowIndexChanged();
            }
        }
        private global::System.Int32 _RowIndex;
        partial void OnRowIndexChanging(global::System.Int32 value);
        partial void OnRowIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LineStatus
        {
            get
            {
                return _LineStatus;
            }
            set
            {
                OnLineStatusChanging(value);
                ReportPropertyChanging("LineStatus");
                _LineStatus = StructuralObject.SetValidValue(value, false, "LineStatus");
                ReportPropertyChanged("LineStatus");
                OnLineStatusChanged();
            }
        }
        private global::System.String _LineStatus;
        partial void OnLineStatusChanging(global::System.String value);
        partial void OnLineStatusChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Vaild match using mobile validation algorithm
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AutoAccepted
        {
            get
            {
                return _AutoAccepted;
            }
            set
            {
                OnAutoAcceptedChanging(value);
                ReportPropertyChanging("AutoAccepted");
                _AutoAccepted = StructuralObject.SetValidValue(value, false, "AutoAccepted");
                ReportPropertyChanged("AutoAccepted");
                OnAutoAcceptedChanged();
            }
        }
        private global::System.String _AutoAccepted;
        partial void OnAutoAcceptedChanging(global::System.String value);
        partial void OnAutoAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StreetAddress
        {
            get
            {
                return _StreetAddress;
            }
            set
            {
                OnStreetAddressChanging(value);
                ReportPropertyChanging("StreetAddress");
                _StreetAddress = StructuralObject.SetValidValue(value, false, "StreetAddress");
                ReportPropertyChanged("StreetAddress");
                OnStreetAddressChanged();
            }
        }
        private global::System.String _StreetAddress;
        partial void OnStreetAddressChanging(global::System.String value);
        partial void OnStreetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SignedDate
        {
            get
            {
                return _SignedDate;
            }
            set
            {
                OnSignedDateChanging(value);
                ReportPropertyChanging("SignedDate");
                _SignedDate = StructuralObject.SetValidValue(value, "SignedDate");
                ReportPropertyChanged("SignedDate");
                OnSignedDateChanged();
            }
        }
        private global::System.DateTime _SignedDate;
        partial void OnSignedDateChanging(global::System.DateTime value);
        partial void OnSignedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                OnVoterIDChanging(value);
                ReportPropertyChanging("VoterID");
                _VoterID = StructuralObject.SetValidValue(value, false, "VoterID");
                ReportPropertyChanged("VoterID");
                OnVoterIDChanged();
            }
        }
        private global::System.String _VoterID;
        partial void OnVoterIDChanging(global::System.String value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Populated by mobile validation algorithm
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataLinkID
        {
            get
            {
                return _DataLinkID;
            }
            set
            {
                OnDataLinkIDChanging(value);
                ReportPropertyChanging("DataLinkID");
                _DataLinkID = StructuralObject.SetValidValue(value, "DataLinkID");
                ReportPropertyChanged("DataLinkID");
                OnDataLinkIDChanged();
            }
        }
        private global::System.Int32 _DataLinkID;
        partial void OnDataLinkIDChanging(global::System.Int32 value);
        partial void OnDataLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Apt
        {
            get
            {
                return _Apt;
            }
            set
            {
                OnAptChanging(value);
                ReportPropertyChanging("Apt");
                _Apt = StructuralObject.SetValidValue(value, false, "Apt");
                ReportPropertyChanged("Apt");
                OnAptChanged();
            }
        }
        private global::System.String _Apt;
        partial void OnAptChanging(global::System.String value);
        partial void OnAptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoterRegNotFoundError
        {
            get
            {
                return _VoterRegNotFoundError;
            }
            set
            {
                OnVoterRegNotFoundErrorChanging(value);
                ReportPropertyChanging("VoterRegNotFoundError");
                _VoterRegNotFoundError = StructuralObject.SetValidValue(value, false, "VoterRegNotFoundError");
                ReportPropertyChanged("VoterRegNotFoundError");
                OnVoterRegNotFoundErrorChanged();
            }
        }
        private global::System.String _VoterRegNotFoundError;
        partial void OnVoterRegNotFoundErrorChanging(global::System.String value);
        partial void OnVoterRegNotFoundErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingNameError
        {
            get
            {
                return _MissingNameError;
            }
            set
            {
                OnMissingNameErrorChanging(value);
                ReportPropertyChanging("MissingNameError");
                _MissingNameError = StructuralObject.SetValidValue(value, false, "MissingNameError");
                ReportPropertyChanged("MissingNameError");
                OnMissingNameErrorChanged();
            }
        }
        private global::System.String _MissingNameError;
        partial void OnMissingNameErrorChanging(global::System.String value);
        partial void OnMissingNameErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingAddressError
        {
            get
            {
                return _MissingAddressError;
            }
            set
            {
                OnMissingAddressErrorChanging(value);
                ReportPropertyChanging("MissingAddressError");
                _MissingAddressError = StructuralObject.SetValidValue(value, false, "MissingAddressError");
                ReportPropertyChanged("MissingAddressError");
                OnMissingAddressErrorChanged();
            }
        }
        private global::System.String _MissingAddressError;
        partial void OnMissingAddressErrorChanging(global::System.String value);
        partial void OnMissingAddressErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingDateSignedError
        {
            get
            {
                return _MissingDateSignedError;
            }
            set
            {
                OnMissingDateSignedErrorChanging(value);
                ReportPropertyChanging("MissingDateSignedError");
                _MissingDateSignedError = StructuralObject.SetValidValue(value, false, "MissingDateSignedError");
                ReportPropertyChanged("MissingDateSignedError");
                OnMissingDateSignedErrorChanged();
            }
        }
        private global::System.String _MissingDateSignedError;
        partial void OnMissingDateSignedErrorChanging(global::System.String value);
        partial void OnMissingDateSignedErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressMismatchError
        {
            get
            {
                return _AddressMismatchError;
            }
            set
            {
                OnAddressMismatchErrorChanging(value);
                ReportPropertyChanging("AddressMismatchError");
                _AddressMismatchError = StructuralObject.SetValidValue(value, false, "AddressMismatchError");
                ReportPropertyChanged("AddressMismatchError");
                OnAddressMismatchErrorChanged();
            }
        }
        private global::System.String _AddressMismatchError;
        partial void OnAddressMismatchErrorChanging(global::System.String value);
        partial void OnAddressMismatchErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SignatureMismatchError
        {
            get
            {
                return _SignatureMismatchError;
            }
            set
            {
                OnSignatureMismatchErrorChanging(value);
                ReportPropertyChanging("SignatureMismatchError");
                _SignatureMismatchError = StructuralObject.SetValidValue(value, false, "SignatureMismatchError");
                ReportPropertyChanged("SignatureMismatchError");
                OnSignatureMismatchErrorChanged();
            }
        }
        private global::System.String _SignatureMismatchError;
        partial void OnSignatureMismatchErrorChanging(global::System.String value);
        partial void OnSignatureMismatchErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvalidDateSignedError
        {
            get
            {
                return _InvalidDateSignedError;
            }
            set
            {
                OnInvalidDateSignedErrorChanging(value);
                ReportPropertyChanging("InvalidDateSignedError");
                _InvalidDateSignedError = StructuralObject.SetValidValue(value, false, "InvalidDateSignedError");
                ReportPropertyChanged("InvalidDateSignedError");
                OnInvalidDateSignedErrorChanged();
            }
        }
        private global::System.String _InvalidDateSignedError;
        partial void OnInvalidDateSignedErrorChanging(global::System.String value);
        partial void OnInvalidDateSignedErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingSignatureParaError
        {
            get
            {
                return _MissingSignatureParaError;
            }
            set
            {
                OnMissingSignatureParaErrorChanging(value);
                ReportPropertyChanging("MissingSignatureParaError");
                _MissingSignatureParaError = StructuralObject.SetValidValue(value, false, "MissingSignatureParaError");
                ReportPropertyChanged("MissingSignatureParaError");
                OnMissingSignatureParaErrorChanged();
            }
        }
        private global::System.String _MissingSignatureParaError;
        partial void OnMissingSignatureParaErrorChanging(global::System.String value);
        partial void OnMissingSignatureParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingNameParaError
        {
            get
            {
                return _MissingNameParaError;
            }
            set
            {
                OnMissingNameParaErrorChanging(value);
                ReportPropertyChanging("MissingNameParaError");
                _MissingNameParaError = StructuralObject.SetValidValue(value, false, "MissingNameParaError");
                ReportPropertyChanged("MissingNameParaError");
                OnMissingNameParaErrorChanged();
            }
        }
        private global::System.String _MissingNameParaError;
        partial void OnMissingNameParaErrorChanging(global::System.String value);
        partial void OnMissingNameParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingAddressParaError
        {
            get
            {
                return _MissingAddressParaError;
            }
            set
            {
                OnMissingAddressParaErrorChanging(value);
                ReportPropertyChanging("MissingAddressParaError");
                _MissingAddressParaError = StructuralObject.SetValidValue(value, false, "MissingAddressParaError");
                ReportPropertyChanged("MissingAddressParaError");
                OnMissingAddressParaErrorChanged();
            }
        }
        private global::System.String _MissingAddressParaError;
        partial void OnMissingAddressParaErrorChanging(global::System.String value);
        partial void OnMissingAddressParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MissingDateSignedParaError
        {
            get
            {
                return _MissingDateSignedParaError;
            }
            set
            {
                OnMissingDateSignedParaErrorChanging(value);
                ReportPropertyChanging("MissingDateSignedParaError");
                _MissingDateSignedParaError = StructuralObject.SetValidValue(value, false, "MissingDateSignedParaError");
                ReportPropertyChanged("MissingDateSignedParaError");
                OnMissingDateSignedParaErrorChanged();
            }
        }
        private global::System.String _MissingDateSignedParaError;
        partial void OnMissingDateSignedParaErrorChanging(global::System.String value);
        partial void OnMissingDateSignedParaErrorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, false, "Suffix");
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DriverLicenseNumber
        {
            get
            {
                return _DriverLicenseNumber;
            }
            set
            {
                OnDriverLicenseNumberChanging(value);
                ReportPropertyChanging("DriverLicenseNumber");
                _DriverLicenseNumber = StructuralObject.SetValidValue(value, false, "DriverLicenseNumber");
                ReportPropertyChanged("DriverLicenseNumber");
                OnDriverLicenseNumberChanged();
            }
        }
        private global::System.String _DriverLicenseNumber;
        partial void OnDriverLicenseNumberChanging(global::System.String value);
        partial void OnDriverLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WithdrawnVoterError
        {
            get
            {
                return _WithdrawnVoterError;
            }
            set
            {
                OnWithdrawnVoterErrorChanging(value);
                ReportPropertyChanging("WithdrawnVoterError");
                _WithdrawnVoterError = StructuralObject.SetValidValue(value, false, "WithdrawnVoterError");
                ReportPropertyChanged("WithdrawnVoterError");
                OnWithdrawnVoterErrorChanged();
            }
        }
        private global::System.String _WithdrawnVoterError;
        partial void OnWithdrawnVoterErrorChanging(global::System.String value);
        partial void OnWithdrawnVoterErrorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "DataLinkCriteriaPetitionLine", "DataLinkCriteria")]
        public DataLinkCriteria DataLinkCriteria
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataLinkCriteria>("Mobile_PetitionsModel.DataLinkCriteriaPetitionLine", "DataLinkCriteria").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataLinkCriteria>("Mobile_PetitionsModel.DataLinkCriteriaPetitionLine", "DataLinkCriteria").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataLinkCriteria> DataLinkCriteriaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataLinkCriteria>("Mobile_PetitionsModel.DataLinkCriteriaPetitionLine", "DataLinkCriteria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataLinkCriteria>("Mobile_PetitionsModel.DataLinkCriteriaPetitionLine", "DataLinkCriteria", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "NotaryPagePetitionLine", "NotaryPage")]
        public NotaryPage NotaryPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotaryPage>("Mobile_PetitionsModel.NotaryPagePetitionLine", "NotaryPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotaryPage>("Mobile_PetitionsModel.NotaryPagePetitionLine", "NotaryPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotaryPage> NotaryPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotaryPage>("Mobile_PetitionsModel.NotaryPagePetitionLine", "NotaryPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotaryPage>("Mobile_PetitionsModel.NotaryPagePetitionLine", "NotaryPage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="PetitionMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PetitionMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PetitionMaster object.
        /// </summary>
        /// <param name="petitionID">Initial value of the PetitionID property.</param>
        /// <param name="proponentID">Initial value of the ProponentID property.</param>
        /// <param name="jurisdictionID">Initial value of the JurisdictionID property.</param>
        /// <param name="petitionName">Initial value of the PetitionName property.</param>
        /// <param name="petitionTypeID">Initial value of the PetitionTypeID property.</param>
        /// <param name="proposedLawText">Initial value of the ProposedLawText property.</param>
        /// <param name="petitionNumber">Initial value of the PetitionNumber property.</param>
        /// <param name="legalReleaseDate">Initial value of the LegalReleaseDate property.</param>
        /// <param name="legalTitle">Initial value of the LegalTitle property.</param>
        /// <param name="legalSummary">Initial value of the LegalSummary property.</param>
        /// <param name="fullTextDisplay">Initial value of the FullTextDisplay property.</param>
        /// <param name="fullTextPrint">Initial value of the FullTextPrint property.</param>
        /// <param name="fullTextDoc">Initial value of the FullTextDoc property.</param>
        /// <param name="basisElectionDate">Initial value of the BasisElectionDate property.</param>
        /// <param name="basisElectionCount">Initial value of the BasisElectionCount property.</param>
        /// <param name="nextElectionDate">Initial value of the NextElectionDate property.</param>
        /// <param name="signaturesRequired">Initial value of the SignaturesRequired property.</param>
        /// <param name="petitionDeadlineDate">Initial value of the PetitionDeadlineDate property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="circulatorName">Initial value of the CirculatorName property.</param>
        /// <param name="autoSignature">Initial value of the AutoSignature property.</param>
        /// <param name="petitionSubmitDate">Initial value of the PetitionSubmitDate property.</param>
        /// <param name="candidateID">Initial value of the CandidateID property.</param>
        /// <param name="politicalPartyID">Initial value of the PoliticalPartyID property.</param>
        /// <param name="jurisdictionValueID">Initial value of the JurisdictionValueID property.</param>
        public static PetitionMaster CreatePetitionMaster(global::System.Int32 petitionID, global::System.Double proponentID, global::System.Int32 jurisdictionID, global::System.String petitionName, global::System.Int32 petitionTypeID, global::System.String proposedLawText, global::System.Double petitionNumber, global::System.DateTime legalReleaseDate, global::System.String legalTitle, global::System.String legalSummary, global::System.String fullTextDisplay, global::System.String fullTextPrint, global::System.String fullTextDoc, global::System.DateTime basisElectionDate, global::System.Double basisElectionCount, global::System.DateTime nextElectionDate, global::System.Boolean signaturesRequired, global::System.DateTime petitionDeadlineDate, global::System.Double status, global::System.String circulatorName, global::System.Boolean autoSignature, global::System.DateTime petitionSubmitDate, global::System.String candidateID, global::System.String politicalPartyID, global::System.String jurisdictionValueID)
        {
            PetitionMaster petitionMaster = new PetitionMaster();
            petitionMaster.PetitionID = petitionID;
            petitionMaster.ProponentID = proponentID;
            petitionMaster.JurisdictionID = jurisdictionID;
            petitionMaster.PetitionName = petitionName;
            petitionMaster.PetitionTypeID = petitionTypeID;
            petitionMaster.ProposedLawText = proposedLawText;
            petitionMaster.PetitionNumber = petitionNumber;
            petitionMaster.LegalReleaseDate = legalReleaseDate;
            petitionMaster.LegalTitle = legalTitle;
            petitionMaster.LegalSummary = legalSummary;
            petitionMaster.FullTextDisplay = fullTextDisplay;
            petitionMaster.FullTextPrint = fullTextPrint;
            petitionMaster.FullTextDoc = fullTextDoc;
            petitionMaster.BasisElectionDate = basisElectionDate;
            petitionMaster.BasisElectionCount = basisElectionCount;
            petitionMaster.NextElectionDate = nextElectionDate;
            petitionMaster.SignaturesRequired = signaturesRequired;
            petitionMaster.PetitionDeadlineDate = petitionDeadlineDate;
            petitionMaster.Status = status;
            petitionMaster.CirculatorName = circulatorName;
            petitionMaster.AutoSignature = autoSignature;
            petitionMaster.PetitionSubmitDate = petitionSubmitDate;
            petitionMaster.CandidateID = candidateID;
            petitionMaster.PoliticalPartyID = politicalPartyID;
            petitionMaster.JurisdictionValueID = jurisdictionValueID;
            return petitionMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// System Petition ID Number
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PetitionID
        {
            get
            {
                return _PetitionID;
            }
            set
            {
                if (_PetitionID != value)
                {
                    OnPetitionIDChanging(value);
                    ReportPropertyChanging("PetitionID");
                    _PetitionID = StructuralObject.SetValidValue(value, "PetitionID");
                    ReportPropertyChanged("PetitionID");
                    OnPetitionIDChanged();
                }
            }
        }
        private global::System.Int32 _PetitionID;
        partial void OnPetitionIDChanging(global::System.Int32 value);
        partial void OnPetitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ProponentID
        {
            get
            {
                return _ProponentID;
            }
            set
            {
                OnProponentIDChanging(value);
                ReportPropertyChanging("ProponentID");
                _ProponentID = StructuralObject.SetValidValue(value, "ProponentID");
                ReportPropertyChanged("ProponentID");
                OnProponentIDChanged();
            }
        }
        private global::System.Double _ProponentID;
        partial void OnProponentIDChanging(global::System.Double value);
        partial void OnProponentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JurisdictionID
        {
            get
            {
                return _JurisdictionID;
            }
            set
            {
                OnJurisdictionIDChanging(value);
                ReportPropertyChanging("JurisdictionID");
                _JurisdictionID = StructuralObject.SetValidValue(value, "JurisdictionID");
                ReportPropertyChanged("JurisdictionID");
                OnJurisdictionIDChanged();
            }
        }
        private global::System.Int32 _JurisdictionID;
        partial void OnJurisdictionIDChanging(global::System.Int32 value);
        partial void OnJurisdictionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PetitionName
        {
            get
            {
                return _PetitionName;
            }
            set
            {
                OnPetitionNameChanging(value);
                ReportPropertyChanging("PetitionName");
                _PetitionName = StructuralObject.SetValidValue(value, false, "PetitionName");
                ReportPropertyChanged("PetitionName");
                OnPetitionNameChanged();
            }
        }
        private global::System.String _PetitionName;
        partial void OnPetitionNameChanging(global::System.String value);
        partial void OnPetitionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PetitionTypeID
        {
            get
            {
                return _PetitionTypeID;
            }
            set
            {
                OnPetitionTypeIDChanging(value);
                ReportPropertyChanging("PetitionTypeID");
                _PetitionTypeID = StructuralObject.SetValidValue(value, "PetitionTypeID");
                ReportPropertyChanged("PetitionTypeID");
                OnPetitionTypeIDChanged();
            }
        }
        private global::System.Int32 _PetitionTypeID;
        partial void OnPetitionTypeIDChanging(global::System.Int32 value);
        partial void OnPetitionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProposedLawText
        {
            get
            {
                return _ProposedLawText;
            }
            set
            {
                OnProposedLawTextChanging(value);
                ReportPropertyChanging("ProposedLawText");
                _ProposedLawText = StructuralObject.SetValidValue(value, false, "ProposedLawText");
                ReportPropertyChanged("ProposedLawText");
                OnProposedLawTextChanged();
            }
        }
        private global::System.String _ProposedLawText;
        partial void OnProposedLawTextChanging(global::System.String value);
        partial void OnProposedLawTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PetitionNumber
        {
            get
            {
                return _PetitionNumber;
            }
            set
            {
                OnPetitionNumberChanging(value);
                ReportPropertyChanging("PetitionNumber");
                _PetitionNumber = StructuralObject.SetValidValue(value, "PetitionNumber");
                ReportPropertyChanged("PetitionNumber");
                OnPetitionNumberChanged();
            }
        }
        private global::System.Double _PetitionNumber;
        partial void OnPetitionNumberChanging(global::System.Double value);
        partial void OnPetitionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LegalReleaseDate
        {
            get
            {
                return _LegalReleaseDate;
            }
            set
            {
                OnLegalReleaseDateChanging(value);
                ReportPropertyChanging("LegalReleaseDate");
                _LegalReleaseDate = StructuralObject.SetValidValue(value, "LegalReleaseDate");
                ReportPropertyChanged("LegalReleaseDate");
                OnLegalReleaseDateChanged();
            }
        }
        private global::System.DateTime _LegalReleaseDate;
        partial void OnLegalReleaseDateChanging(global::System.DateTime value);
        partial void OnLegalReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LegalTitle
        {
            get
            {
                return _LegalTitle;
            }
            set
            {
                OnLegalTitleChanging(value);
                ReportPropertyChanging("LegalTitle");
                _LegalTitle = StructuralObject.SetValidValue(value, false, "LegalTitle");
                ReportPropertyChanged("LegalTitle");
                OnLegalTitleChanged();
            }
        }
        private global::System.String _LegalTitle;
        partial void OnLegalTitleChanging(global::System.String value);
        partial void OnLegalTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LegalSummary
        {
            get
            {
                return _LegalSummary;
            }
            set
            {
                OnLegalSummaryChanging(value);
                ReportPropertyChanging("LegalSummary");
                _LegalSummary = StructuralObject.SetValidValue(value, false, "LegalSummary");
                ReportPropertyChanged("LegalSummary");
                OnLegalSummaryChanged();
            }
        }
        private global::System.String _LegalSummary;
        partial void OnLegalSummaryChanging(global::System.String value);
        partial void OnLegalSummaryChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// Access petition&apos;s full text button
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullTextDisplay
        {
            get
            {
                return _FullTextDisplay;
            }
            set
            {
                OnFullTextDisplayChanging(value);
                ReportPropertyChanging("FullTextDisplay");
                _FullTextDisplay = StructuralObject.SetValidValue(value, false, "FullTextDisplay");
                ReportPropertyChanged("FullTextDisplay");
                OnFullTextDisplayChanged();
            }
        }
        private global::System.String _FullTextDisplay;
        partial void OnFullTextDisplayChanging(global::System.String value);
        partial void OnFullTextDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullTextPrint
        {
            get
            {
                return _FullTextPrint;
            }
            set
            {
                OnFullTextPrintChanging(value);
                ReportPropertyChanging("FullTextPrint");
                _FullTextPrint = StructuralObject.SetValidValue(value, false, "FullTextPrint");
                ReportPropertyChanged("FullTextPrint");
                OnFullTextPrintChanged();
            }
        }
        private global::System.String _FullTextPrint;
        partial void OnFullTextPrintChanging(global::System.String value);
        partial void OnFullTextPrintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullTextDoc
        {
            get
            {
                return _FullTextDoc;
            }
            set
            {
                OnFullTextDocChanging(value);
                ReportPropertyChanging("FullTextDoc");
                _FullTextDoc = StructuralObject.SetValidValue(value, false, "FullTextDoc");
                ReportPropertyChanged("FullTextDoc");
                OnFullTextDocChanged();
            }
        }
        private global::System.String _FullTextDoc;
        partial void OnFullTextDocChanging(global::System.String value);
        partial void OnFullTextDocChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BasisElectionDate
        {
            get
            {
                return _BasisElectionDate;
            }
            set
            {
                OnBasisElectionDateChanging(value);
                ReportPropertyChanging("BasisElectionDate");
                _BasisElectionDate = StructuralObject.SetValidValue(value, "BasisElectionDate");
                ReportPropertyChanged("BasisElectionDate");
                OnBasisElectionDateChanged();
            }
        }
        private global::System.DateTime _BasisElectionDate;
        partial void OnBasisElectionDateChanging(global::System.DateTime value);
        partial void OnBasisElectionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BasisElectionCount
        {
            get
            {
                return _BasisElectionCount;
            }
            set
            {
                OnBasisElectionCountChanging(value);
                ReportPropertyChanging("BasisElectionCount");
                _BasisElectionCount = StructuralObject.SetValidValue(value, "BasisElectionCount");
                ReportPropertyChanged("BasisElectionCount");
                OnBasisElectionCountChanged();
            }
        }
        private global::System.Double _BasisElectionCount;
        partial void OnBasisElectionCountChanging(global::System.Double value);
        partial void OnBasisElectionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NextElectionDate
        {
            get
            {
                return _NextElectionDate;
            }
            set
            {
                OnNextElectionDateChanging(value);
                ReportPropertyChanging("NextElectionDate");
                _NextElectionDate = StructuralObject.SetValidValue(value, "NextElectionDate");
                ReportPropertyChanged("NextElectionDate");
                OnNextElectionDateChanged();
            }
        }
        private global::System.DateTime _NextElectionDate;
        partial void OnNextElectionDateChanging(global::System.DateTime value);
        partial void OnNextElectionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SignaturesRequired
        {
            get
            {
                return _SignaturesRequired;
            }
            set
            {
                OnSignaturesRequiredChanging(value);
                ReportPropertyChanging("SignaturesRequired");
                _SignaturesRequired = StructuralObject.SetValidValue(value, "SignaturesRequired");
                ReportPropertyChanged("SignaturesRequired");
                OnSignaturesRequiredChanged();
            }
        }
        private global::System.Boolean _SignaturesRequired;
        partial void OnSignaturesRequiredChanging(global::System.Boolean value);
        partial void OnSignaturesRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PetitionDeadlineDate
        {
            get
            {
                return _PetitionDeadlineDate;
            }
            set
            {
                OnPetitionDeadlineDateChanging(value);
                ReportPropertyChanging("PetitionDeadlineDate");
                _PetitionDeadlineDate = StructuralObject.SetValidValue(value, "PetitionDeadlineDate");
                ReportPropertyChanged("PetitionDeadlineDate");
                OnPetitionDeadlineDateChanged();
            }
        }
        private global::System.DateTime _PetitionDeadlineDate;
        partial void OnPetitionDeadlineDateChanging(global::System.DateTime value);
        partial void OnPetitionDeadlineDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Double _Status;
        partial void OnStatusChanging(global::System.Double value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CirculatorName
        {
            get
            {
                return _CirculatorName;
            }
            set
            {
                OnCirculatorNameChanging(value);
                ReportPropertyChanging("CirculatorName");
                _CirculatorName = StructuralObject.SetValidValue(value, false, "CirculatorName");
                ReportPropertyChanged("CirculatorName");
                OnCirculatorNameChanged();
            }
        }
        private global::System.String _CirculatorName;
        partial void OnCirculatorNameChanging(global::System.String value);
        partial void OnCirculatorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoSignature
        {
            get
            {
                return _AutoSignature;
            }
            set
            {
                OnAutoSignatureChanging(value);
                ReportPropertyChanging("AutoSignature");
                _AutoSignature = StructuralObject.SetValidValue(value, "AutoSignature");
                ReportPropertyChanged("AutoSignature");
                OnAutoSignatureChanged();
            }
        }
        private global::System.Boolean _AutoSignature;
        partial void OnAutoSignatureChanging(global::System.Boolean value);
        partial void OnAutoSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PetitionSubmitDate
        {
            get
            {
                return _PetitionSubmitDate;
            }
            set
            {
                OnPetitionSubmitDateChanging(value);
                ReportPropertyChanging("PetitionSubmitDate");
                _PetitionSubmitDate = StructuralObject.SetValidValue(value, "PetitionSubmitDate");
                ReportPropertyChanged("PetitionSubmitDate");
                OnPetitionSubmitDateChanged();
            }
        }
        private global::System.DateTime _PetitionSubmitDate;
        partial void OnPetitionSubmitDateChanging(global::System.DateTime value);
        partial void OnPetitionSubmitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CandidateID
        {
            get
            {
                return _CandidateID;
            }
            set
            {
                OnCandidateIDChanging(value);
                ReportPropertyChanging("CandidateID");
                _CandidateID = StructuralObject.SetValidValue(value, false, "CandidateID");
                ReportPropertyChanged("CandidateID");
                OnCandidateIDChanged();
            }
        }
        private global::System.String _CandidateID;
        partial void OnCandidateIDChanging(global::System.String value);
        partial void OnCandidateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PoliticalPartyID
        {
            get
            {
                return _PoliticalPartyID;
            }
            set
            {
                OnPoliticalPartyIDChanging(value);
                ReportPropertyChanging("PoliticalPartyID");
                _PoliticalPartyID = StructuralObject.SetValidValue(value, false, "PoliticalPartyID");
                ReportPropertyChanged("PoliticalPartyID");
                OnPoliticalPartyIDChanged();
            }
        }
        private global::System.String _PoliticalPartyID;
        partial void OnPoliticalPartyIDChanging(global::System.String value);
        partial void OnPoliticalPartyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JurisdictionValueID
        {
            get
            {
                return _JurisdictionValueID;
            }
            set
            {
                OnJurisdictionValueIDChanging(value);
                ReportPropertyChanging("JurisdictionValueID");
                _JurisdictionValueID = StructuralObject.SetValidValue(value, false, "JurisdictionValueID");
                ReportPropertyChanged("JurisdictionValueID");
                OnJurisdictionValueIDChanged();
            }
        }
        private global::System.String _JurisdictionValueID;
        partial void OnJurisdictionValueIDChanging(global::System.String value);
        partial void OnJurisdictionValueIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "CountyCodePetitionMaster", "CountyCode")]
        public CountyCode CountyCode
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountyCode>("Mobile_PetitionsModel.CountyCodePetitionMaster", "CountyCode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountyCode>("Mobile_PetitionsModel.CountyCodePetitionMaster", "CountyCode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountyCode> CountyCodeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountyCode>("Mobile_PetitionsModel.CountyCodePetitionMaster", "CountyCode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountyCode>("Mobile_PetitionsModel.CountyCodePetitionMaster", "CountyCode", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "PetitionTypePetitionMaster", "PetitionType")]
        public PetitionType PetitionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PetitionType>("Mobile_PetitionsModel.PetitionTypePetitionMaster", "PetitionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PetitionType>("Mobile_PetitionsModel.PetitionTypePetitionMaster", "PetitionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PetitionType> PetitionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PetitionType>("Mobile_PetitionsModel.PetitionTypePetitionMaster", "PetitionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PetitionType>("Mobile_PetitionsModel.PetitionTypePetitionMaster", "PetitionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "PetitionMasterDataLinkCriteria", "DataLinkCriteria")]
        public EntityCollection<DataLinkCriteria> DataLinkCriterias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataLinkCriteria>("Mobile_PetitionsModel.PetitionMasterDataLinkCriteria", "DataLinkCriteria");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataLinkCriteria>("Mobile_PetitionsModel.PetitionMasterDataLinkCriteria", "DataLinkCriteria", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="PetitionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PetitionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PetitionType object.
        /// </summary>
        /// <param name="petitionTypeID">Initial value of the PetitionTypeID property.</param>
        /// <param name="petitionTypeName">Initial value of the PetitionTypeName property.</param>
        public static PetitionType CreatePetitionType(global::System.Int32 petitionTypeID, global::System.String petitionTypeName)
        {
            PetitionType petitionType = new PetitionType();
            petitionType.PetitionTypeID = petitionTypeID;
            petitionType.PetitionTypeName = petitionTypeName;
            return petitionType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PetitionTypeID
        {
            get
            {
                return _PetitionTypeID;
            }
            set
            {
                if (_PetitionTypeID != value)
                {
                    OnPetitionTypeIDChanging(value);
                    ReportPropertyChanging("PetitionTypeID");
                    _PetitionTypeID = StructuralObject.SetValidValue(value, "PetitionTypeID");
                    ReportPropertyChanged("PetitionTypeID");
                    OnPetitionTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PetitionTypeID;
        partial void OnPetitionTypeIDChanging(global::System.Int32 value);
        partial void OnPetitionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PetitionTypeName
        {
            get
            {
                return _PetitionTypeName;
            }
            set
            {
                OnPetitionTypeNameChanging(value);
                ReportPropertyChanging("PetitionTypeName");
                _PetitionTypeName = StructuralObject.SetValidValue(value, false, "PetitionTypeName");
                ReportPropertyChanged("PetitionTypeName");
                OnPetitionTypeNameChanged();
            }
        }
        private global::System.String _PetitionTypeName;
        partial void OnPetitionTypeNameChanging(global::System.String value);
        partial void OnPetitionTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "PetitionTypePetitionMaster", "PetitionMaster")]
        public EntityCollection<PetitionMaster> PetitionMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PetitionMaster>("Mobile_PetitionsModel.PetitionTypePetitionMaster", "PetitionMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PetitionMaster>("Mobile_PetitionsModel.PetitionTypePetitionMaster", "PetitionMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="RememberUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RememberUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RememberUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="reUser">Initial value of the ReUser property.</param>
        /// <param name="rePassword">Initial value of the RePassword property.</param>
        /// <param name="dateEntered">Initial value of the DateEntered property.</param>
        public static RememberUser CreateRememberUser(global::System.Int32 id, global::System.String reUser, global::System.String rePassword, global::System.DateTime dateEntered)
        {
            RememberUser rememberUser = new RememberUser();
            rememberUser.ID = id;
            rememberUser.ReUser = reUser;
            rememberUser.RePassword = rePassword;
            rememberUser.DateEntered = dateEntered;
            return rememberUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReUser
        {
            get
            {
                return _ReUser;
            }
            set
            {
                OnReUserChanging(value);
                ReportPropertyChanging("ReUser");
                _ReUser = StructuralObject.SetValidValue(value, false, "ReUser");
                ReportPropertyChanged("ReUser");
                OnReUserChanged();
            }
        }
        private global::System.String _ReUser;
        partial void OnReUserChanging(global::System.String value);
        partial void OnReUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RePassword
        {
            get
            {
                return _RePassword;
            }
            set
            {
                OnRePasswordChanging(value);
                ReportPropertyChanging("RePassword");
                _RePassword = StructuralObject.SetValidValue(value, false, "RePassword");
                ReportPropertyChanged("RePassword");
                OnRePasswordChanged();
            }
        }
        private global::System.String _RePassword;
        partial void OnRePasswordChanging(global::System.String value);
        partial void OnRePasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEntered
        {
            get
            {
                return _DateEntered;
            }
            set
            {
                OnDateEnteredChanging(value);
                ReportPropertyChanging("DateEntered");
                _DateEntered = StructuralObject.SetValidValue(value, "DateEntered");
                ReportPropertyChanged("DateEntered");
                OnDateEnteredChanged();
            }
        }
        private global::System.DateTime _DateEntered;
        partial void OnDateEnteredChanging(global::System.DateTime value);
        partial void OnDateEnteredChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="Signature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Signature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Signature object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="suffix">Initial value of the Suffix property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        /// <param name="dLNumber">Initial value of the DLNumber property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zip">Initial value of the Zip property.</param>
        /// <param name="signatureClip">Initial value of the SignatureClip property.</param>
        /// <param name="dateSigned">Initial value of the DateSigned property.</param>
        /// <param name="circulatorID">Initial value of the CirculatorID property.</param>
        public static Signature CreateSignature(global::System.Int32 id, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String suffix, global::System.DateTime birthDate, global::System.String dLNumber, global::System.String address, global::System.String city, global::System.String state, global::System.String zip, global::System.String signatureClip, global::System.DateTime dateSigned, global::System.Int32 circulatorID)
        {
            Signature signature = new Signature();
            signature.ID = id;
            signature.FirstName = firstName;
            signature.MiddleName = middleName;
            signature.LastName = lastName;
            signature.Suffix = suffix;
            signature.BirthDate = birthDate;
            signature.DLNumber = dLNumber;
            signature.Address = address;
            signature.City = city;
            signature.State = state;
            signature.Zip = zip;
            signature.SignatureClip = signatureClip;
            signature.DateSigned = dateSigned;
            signature.CirculatorID = circulatorID;
            return signature;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, false, "Suffix");
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DLNumber
        {
            get
            {
                return _DLNumber;
            }
            set
            {
                OnDLNumberChanging(value);
                ReportPropertyChanging("DLNumber");
                _DLNumber = StructuralObject.SetValidValue(value, false, "DLNumber");
                ReportPropertyChanged("DLNumber");
                OnDLNumberChanged();
            }
        }
        private global::System.String _DLNumber;
        partial void OnDLNumberChanging(global::System.String value);
        partial void OnDLNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, false, "Zip");
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SignatureClip
        {
            get
            {
                return _SignatureClip;
            }
            set
            {
                OnSignatureClipChanging(value);
                ReportPropertyChanging("SignatureClip");
                _SignatureClip = StructuralObject.SetValidValue(value, false, "SignatureClip");
                ReportPropertyChanged("SignatureClip");
                OnSignatureClipChanged();
            }
        }
        private global::System.String _SignatureClip;
        partial void OnSignatureClipChanging(global::System.String value);
        partial void OnSignatureClipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateSigned
        {
            get
            {
                return _DateSigned;
            }
            set
            {
                OnDateSignedChanging(value);
                ReportPropertyChanging("DateSigned");
                _DateSigned = StructuralObject.SetValidValue(value, "DateSigned");
                ReportPropertyChanged("DateSigned");
                OnDateSignedChanged();
            }
        }
        private global::System.DateTime _DateSigned;
        partial void OnDateSignedChanging(global::System.DateTime value);
        partial void OnDateSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CirculatorID
        {
            get
            {
                return _CirculatorID;
            }
            set
            {
                OnCirculatorIDChanging(value);
                ReportPropertyChanging("CirculatorID");
                _CirculatorID = StructuralObject.SetValidValue(value, "CirculatorID");
                ReportPropertyChanged("CirculatorID");
                OnCirculatorIDChanged();
            }
        }
        private global::System.Int32 _CirculatorID;
        partial void OnCirculatorIDChanging(global::System.Int32 value);
        partial void OnCirculatorIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Mobile_PetitionsModel", "CirculatorSignature", "Circulator")]
        public Circulator Circulator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorSignature", "Circulator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorSignature", "Circulator").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Circulator> CirculatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorSignature", "Circulator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Circulator>("Mobile_PetitionsModel.CirculatorSignature", "Circulator", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Mobile_PetitionsModel", Name="VRImport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VRImport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VRImport object.
        /// </summary>
        /// <param name="voterKey">Initial value of the VoterKey property.</param>
        /// <param name="voterID">Initial value of the VoterID property.</param>
        /// <param name="driverLicenseNumber">Initial value of the DriverLicenseNumber property.</param>
        /// <param name="jurisdictionVR">Initial value of the JurisdictionVR property.</param>
        /// <param name="voterName">Initial value of the VoterName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="stdStreet">Initial value of the stdStreet property.</param>
        /// <param name="stdCity">Initial value of the stdCity property.</param>
        /// <param name="stdState">Initial value of the stdState property.</param>
        /// <param name="stdPostalCode">Initial value of the stdPostalCode property.</param>
        /// <param name="stdCounty">Initial value of the stdCounty property.</param>
        /// <param name="addressExtended">Initial value of the AddressExtended property.</param>
        /// <param name="birthDate">Initial value of the BirthDate property.</param>
        /// <param name="stdSuite">Initial value of the stdSuite property.</param>
        public static VRImport CreateVRImport(global::System.Int32 voterKey, global::System.Int32 voterID, global::System.String driverLicenseNumber, global::System.Int32 jurisdictionVR, global::System.String voterName, global::System.String address, global::System.String city, global::System.String state, global::System.String zipCode, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String stdStreet, global::System.String stdCity, global::System.String stdState, global::System.String stdPostalCode, global::System.String stdCounty, global::System.String addressExtended, global::System.DateTime birthDate, global::System.String stdSuite)
        {
            VRImport vRImport = new VRImport();
            vRImport.VoterKey = voterKey;
            vRImport.VoterID = voterID;
            vRImport.DriverLicenseNumber = driverLicenseNumber;
            vRImport.JurisdictionVR = jurisdictionVR;
            vRImport.VoterName = voterName;
            vRImport.Address = address;
            vRImport.City = city;
            vRImport.State = state;
            vRImport.ZipCode = zipCode;
            vRImport.FirstName = firstName;
            vRImport.MiddleName = middleName;
            vRImport.LastName = lastName;
            vRImport.stdStreet = stdStreet;
            vRImport.stdCity = stdCity;
            vRImport.stdState = stdState;
            vRImport.stdPostalCode = stdPostalCode;
            vRImport.stdCounty = stdCounty;
            vRImport.AddressExtended = addressExtended;
            vRImport.BirthDate = birthDate;
            vRImport.stdSuite = stdSuite;
            return vRImport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoterKey
        {
            get
            {
                return _VoterKey;
            }
            set
            {
                if (_VoterKey != value)
                {
                    OnVoterKeyChanging(value);
                    ReportPropertyChanging("VoterKey");
                    _VoterKey = StructuralObject.SetValidValue(value, "VoterKey");
                    ReportPropertyChanged("VoterKey");
                    OnVoterKeyChanged();
                }
            }
        }
        private global::System.Int32 _VoterKey;
        partial void OnVoterKeyChanging(global::System.Int32 value);
        partial void OnVoterKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoterID
        {
            get
            {
                return _VoterID;
            }
            set
            {
                if (_VoterID != value)
                {
                    OnVoterIDChanging(value);
                    ReportPropertyChanging("VoterID");
                    _VoterID = StructuralObject.SetValidValue(value, "VoterID");
                    ReportPropertyChanged("VoterID");
                    OnVoterIDChanged();
                }
            }
        }
        private global::System.Int32 _VoterID;
        partial void OnVoterIDChanging(global::System.Int32 value);
        partial void OnVoterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DriverLicenseNumber
        {
            get
            {
                return _DriverLicenseNumber;
            }
            set
            {
                OnDriverLicenseNumberChanging(value);
                ReportPropertyChanging("DriverLicenseNumber");
                _DriverLicenseNumber = StructuralObject.SetValidValue(value, false, "DriverLicenseNumber");
                ReportPropertyChanged("DriverLicenseNumber");
                OnDriverLicenseNumberChanged();
            }
        }
        private global::System.String _DriverLicenseNumber;
        partial void OnDriverLicenseNumberChanging(global::System.String value);
        partial void OnDriverLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JurisdictionVR
        {
            get
            {
                return _JurisdictionVR;
            }
            set
            {
                OnJurisdictionVRChanging(value);
                ReportPropertyChanging("JurisdictionVR");
                _JurisdictionVR = StructuralObject.SetValidValue(value, "JurisdictionVR");
                ReportPropertyChanged("JurisdictionVR");
                OnJurisdictionVRChanged();
            }
        }
        private global::System.Int32 _JurisdictionVR;
        partial void OnJurisdictionVRChanging(global::System.Int32 value);
        partial void OnJurisdictionVRChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VoterName
        {
            get
            {
                return _VoterName;
            }
            set
            {
                OnVoterNameChanging(value);
                ReportPropertyChanging("VoterName");
                _VoterName = StructuralObject.SetValidValue(value, false, "VoterName");
                ReportPropertyChanged("VoterName");
                OnVoterNameChanged();
            }
        }
        private global::System.String _VoterName;
        partial void OnVoterNameChanging(global::System.String value);
        partial void OnVoterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false, "State");
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stdStreet
        {
            get
            {
                return _stdStreet;
            }
            set
            {
                OnstdStreetChanging(value);
                ReportPropertyChanging("stdStreet");
                _stdStreet = StructuralObject.SetValidValue(value, false, "stdStreet");
                ReportPropertyChanged("stdStreet");
                OnstdStreetChanged();
            }
        }
        private global::System.String _stdStreet;
        partial void OnstdStreetChanging(global::System.String value);
        partial void OnstdStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stdCity
        {
            get
            {
                return _stdCity;
            }
            set
            {
                OnstdCityChanging(value);
                ReportPropertyChanging("stdCity");
                _stdCity = StructuralObject.SetValidValue(value, false, "stdCity");
                ReportPropertyChanged("stdCity");
                OnstdCityChanged();
            }
        }
        private global::System.String _stdCity;
        partial void OnstdCityChanging(global::System.String value);
        partial void OnstdCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stdState
        {
            get
            {
                return _stdState;
            }
            set
            {
                OnstdStateChanging(value);
                ReportPropertyChanging("stdState");
                _stdState = StructuralObject.SetValidValue(value, false, "stdState");
                ReportPropertyChanged("stdState");
                OnstdStateChanged();
            }
        }
        private global::System.String _stdState;
        partial void OnstdStateChanging(global::System.String value);
        partial void OnstdStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stdPostalCode
        {
            get
            {
                return _stdPostalCode;
            }
            set
            {
                OnstdPostalCodeChanging(value);
                ReportPropertyChanging("stdPostalCode");
                _stdPostalCode = StructuralObject.SetValidValue(value, false, "stdPostalCode");
                ReportPropertyChanged("stdPostalCode");
                OnstdPostalCodeChanged();
            }
        }
        private global::System.String _stdPostalCode;
        partial void OnstdPostalCodeChanging(global::System.String value);
        partial void OnstdPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stdCounty
        {
            get
            {
                return _stdCounty;
            }
            set
            {
                OnstdCountyChanging(value);
                ReportPropertyChanging("stdCounty");
                _stdCounty = StructuralObject.SetValidValue(value, false, "stdCounty");
                ReportPropertyChanged("stdCounty");
                OnstdCountyChanged();
            }
        }
        private global::System.String _stdCounty;
        partial void OnstdCountyChanging(global::System.String value);
        partial void OnstdCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressExtended
        {
            get
            {
                return _AddressExtended;
            }
            set
            {
                OnAddressExtendedChanging(value);
                ReportPropertyChanging("AddressExtended");
                _AddressExtended = StructuralObject.SetValidValue(value, false, "AddressExtended");
                ReportPropertyChanged("AddressExtended");
                OnAddressExtendedChanged();
            }
        }
        private global::System.String _AddressExtended;
        partial void OnAddressExtendedChanging(global::System.String value);
        partial void OnAddressExtendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value, "BirthDate");
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String stdSuite
        {
            get
            {
                return _stdSuite;
            }
            set
            {
                OnstdSuiteChanging(value);
                ReportPropertyChanging("stdSuite");
                _stdSuite = StructuralObject.SetValidValue(value, false, "stdSuite");
                ReportPropertyChanged("stdSuite");
                OnstdSuiteChanged();
            }
        }
        private global::System.String _stdSuite;
        partial void OnstdSuiteChanging(global::System.String value);
        partial void OnstdSuiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    }

    #endregion

}
